package com.manulife.pension.bd.web.validation.pentest;

import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Component;
import org.springframework.validation.BindingResult;
import org.springframework.validation.Errors;
import org.springframework.validation.ObjectError;
import org.springframework.validation.Validator;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.manulife.pension.bd.web.BdBaseController;
import com.manulife.pension.ezk.web.ActionForm;
import com.manulife.pension.platform.web.CommonConstants;
import com.manulife.pension.util.content.GenericException;

@Component
public class BDValidatorFWSearch implements Validator {

	@Override
	public void validate(Object target, Errors errors) {
		ActionForm form = (ActionForm) target;
		ServletRequestAttributes attr = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();
		HttpServletRequest request = attr.getRequest();
		BindingResult bindingResult = (BindingResult) errors;
		if (!bindingResult.hasErrors()) {
			String[] errorCodes = new String[10];
			ArrayList<GenericException> error = (ArrayList<GenericException>) FrwValidator.doValidatePenTestAction(form,
					request, CommonConstants.SEARCH);
			if (!error.isEmpty()) {

				for (GenericException errorEx : error) {
					errorEx.getMessage();
					errorCodes = new String[] { Integer.toString(errorEx.getErrorCode()) };
					bindingResult.addError(new ObjectError(errors.getObjectName(), errorCodes, errorEx.getParams(),
							errorEx.getMessage()));

				}

				if (request.getSession().getAttribute(CommonConstants.ERROR_RDRCT) == null) {
					request.getSession().setAttribute(CommonConstants.ERROR_RDRCT, CommonConstants.ERROR_PAGE);
				}
				request.getSession().removeAttribute(BdBaseController.ERROR_KEY);
				request.removeAttribute(BdBaseController.ERROR_KEY);
				request.getSession().setAttribute(BdBaseController.ERROR_KEY, errors);
				request.setAttribute(BdBaseController.ERROR_KEY, errors);
			}
		}
	}

	@Override
	public boolean supports(Class paramClass) {
		return true;
	}

}