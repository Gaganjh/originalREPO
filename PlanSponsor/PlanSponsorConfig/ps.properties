# Property file which contains configuration information to run and/or deploy the project.
# The project build.xml Ant script will first load the $HOME/.[project.name]/configuration.properies
# file before loading this one. This allow the user to override properties that are specific to it's
# environment without having to touch this file.

## WebSphere configuration ##
# The host on which WebSphere is running
websphere.host=localhost

# The location of the WebSphere install directory
websphere.home=c:\\webSphere9\\AppServer

## Vignette configuration ##
# The host on which the Vignette CMS is running
vignette.cms.host=localhost

# The host on which the Vignette CDS is running
vignette.cds,host=localhost

## Deployement configuration ##

#################################################################################
#                                                                               #
#                         PUBRuntimeParms.properties                            #
#                                                                               #
#  This is the properties file for the US GPS Public View Funds application.    #
#  It contains settings for the following configurations.                       #
#                                                                               #
#  std - applies to all configurations.                                         #
#  dev - assumes everything is running on the same NT machine (localhost),      #
#        using MQ Client connections to talk to queues on test hub.             #
#  tst - assumes web is wd1 and bos is bd1 using the test queue manager.        #
#  acp - assumes web is bd18 and bos is bd19 using the Acceptance queue manager.#
#  prod- assumes web is wp1 and bos is bp1 using the Production queue manager.  #
#                                                                               #
#  Note that I'm explicitly specifying a bunch of values that are equivalent    #
#  to the default value for that property.  This is done to ensure that any     #
#  bogus settings in the DefaultRuntimeParms.properties file aren't being       #
#  picked up and over-riding the application coded defaults.                    #
#                                                                               #
#################################################################################
#
#------------------------------------------------------------------------------
# MF.applicationName is used by lot's of MRL components for logging purposes.
# Whenever a log entry is emitted, the applicationName is one of the columns in
# the logger tables.  It doesn't really matter what value this contains, but it
# must be specified to avoid a null pointer in the logger.
# By convention, the applicationName is also the same as your properties file
# prefix.  So, if your application name was 'PUB', this file would be called
# 'PUBRuntimeParms.properties'.
# Nobody officially assigns applicationName, but obviously it should be unique
# within Manulife.
MF.std.applicationName=PUB
#
#
###############################################################################
#                                                                             #
# View Investment Information Page Settings.                                  #
#                                                                             #
###############################################################################
#
#------------------------------------------------------------------------------
# Specifies the color of the column headings on the View Investment Information
# page.
# If not specified, the default value is '#0000FF'.
#MF.std.ColumnSortLinkColor=#0000FF
#
#
###############################################################################
#                                                                             #
# Fund Performance Chart Settings.                                            #
#                                                                             #
###############################################################################
#
#------------------------------------------------------------------------------
# Specifies the number of fund selection dropdown boxes on the Performance
# Charting page.
# If not specified, the default value is 6.
#MF.std.ChartMaxFunds=6
#
#------------------------------------------------------------------------------
# Specifies the minimum month range that must exist in the startMonth..endMonth
# interval entered on the Performance Charting page.  If the range is less than
# this value, then an error message is generated instead of actually producing
# the chart.
# If not specified, the default value is 6.
#MF.std.ChartMinMonths=6
#
#------------------------------------------------------------------------------
# Sets the background color of the performance chart.
# This value is specified as a comma delimited R,G,B triplet.
# If not specified, the default value is 255,255,255 which is white.
#MF.std.ChartBackgroundColor=255,255,255
#
#------------------------------------------------------------------------------
# Sets the color of the gridlines on the performance chart.
# This value is specified as a comma delimited R,G,B triplet.
# If not specified, the default value is 240,240,240 which is very light grey.
#MF.std.ChartGridColor=240,240,240
#
#------------------------------------------------------------------------------
# Sets the font color of the labels along the x-axis of the performance chart.
# This value is specified as a comma delimited R,G,B triplet.
# If not specified, the default value is 0,0,0 which is black.
#MF.std.ChartXLabelColor=0,0,0
#
#------------------------------------------------------------------------------
# Sets the color of each plotted line on the performance chart.
# Each value is specified as a comma delimited R,G,B triplet.
# If not specified, the following commented out lines are the defaults.
#MF.std.ChartLineColor1=204,0,0
#MF.std.ChartLineColor2=0,204,0
#MF.std.ChartLineColor3=0,0,204
#MF.std.ChartLineColor4=255,204,0
#MF.std.ChartLineColor5=255,0,255
#MF.std.ChartLineColor6=0,204,204
#MF.std.ChartLineColor7=153,153,153
#MF.std.ChartLineColor8=0,0,0
#MF.std.ChartLineColor9=153,102,0
#MF.std.ChartLineColor10=255,0,0
#MF.std.ChartLineColor11=0,255,0
#MF.std.ChartLineColor12=0,0,255
#MF.std.ChartLineColor13=255,255,0
#MF.std.ChartLineColor14=153,0,204
#MF.std.ChartLineColor15=0,255,255
#MF.std.ChartLineColor16=255,153,153
#MF.std.ChartLineColor17=153,255,153
#MF.std.ChartLineColor18=153,153,255
#MF.std.ChartLineColor19=255,255,153
#MF.std.ChartLineColor20=255,153,255
#MF.std.ChartLineColor21=153,255,255
#MF.std.ChartLineColor22=204,204,204
#
#------------------------------------------------------------------------------
# Specifies the fund investment ID of the mock portfolio.
# This is never visible to the user, and its only requirement is that it not
# be the same as any real fund investment ID for our funds or indices.
# If not specified, it defaults to 'Portfolio'.
#MF.std.MockPortfolioFundID=Portfolio
#
#------------------------------------------------------------------------------
# Specifies the name displayed for the users hypothetical portfolio in the
# table of results on the Chart Results page.
# If not specified, it defaults to 'Your Hypothetical Portfolio'.
#MF.std.MockPortfolioFundName=Your Hypothetical Portfolio
#
#------------------------------------------------------------------------------
# This value sets an upper bound for the minimum y value on the chart.
# It is guaranteed that the lowest label on the y-axis will be less than or
# equal to this value.
# Normally, the chart dynamically determines the values along the y-axis by
# looking at the actual data points and just making sure that all points fit
# within the displayed range.
# For example, if all the points in the chart fell between 540 and 790, the
# chart would default to displaying a range of 500-800.  If you set this
# property to 200, you can force the range displayed to be 200-800.
# If you just want the normal dynamic behaviour, you should set this to
# somthing huge, like 2000000000.
# If not specified, the default value is 0.
#MF.std.ChartMinValueUpperBound=0
#
#------------------------------------------------------------------------------
# This value sets a lower bound for the maximum y value on the chart.
# It is guaranteed that the highest label on the y-axis will be greater than or
# equal to this value.
# Normally, the chart dynamically determines the values along the y-axis by
# looking at the actual data points and just making sure that all points fit
# within the displayed range.
# For example, if all the points in the chart fell between 540 and 790, the
# chart would default to displaying a range of 500-800.  If you set this
# property to 1000, you can force the range displayed to be 500-1000.
# If you just want the normal dynamic behaviour, you should set this to
# somthing very small, like -2000000000.
# If not specified, the default value is 1500.
#MF.std.ChartMaxValueLowerBound=1500
#
#------------------------------------------------------------------------------
# Specifies the minimum distance, in pixels, between two gridlines along the
# y-axis.  The charting tool dynamically determines how many labels and
# gridlines to display along the y-axis, and it will use this parameter to
# determine how closely together it can cram the lines.
# If not specified, the default value is 18.
#MF.std.ChartMinYGridSpacingInPixels=18
#
#------------------------------------------------------------------------------
# Specifies the minimum distance, in pixels, between two gridlines along the
# x-axis.  The charting tool dynamically determines how many labels and
# gridlines to display along the x-axis, and it will use this parameter to
# determine how closely together it can cram the lines.
# If not specified, the default value is 10.
#MF.std.ChartMinXGridSpacingInPixels=10
#
#------------------------------------------------------------------------------
# Specifies the minimum distance, in pixels, between two labels along the
# x-axis.  The charting tool dynamically determines how many labels and
# gridlines to display along the x-axis, and it will use this parameter to
# determine how closely together it can cram the labels.
# If not specified, the default value is 50.
#MF.std.ChartMinXLabelSpacingInPixels=50
#
#------------------------------------------------------------------------------
# This value, along with the ChartYAxisDeltaIncrement value, are used to find
# the lowest y-axis value delta so that the labels along the y-axis are no
# closer than the ChartMinYGridSpacingInPixels value.
# If not specified, the default value is 100.
#MF.std.ChartYAxisDeltaStart=100
#
#------------------------------------------------------------------------------
# This value, along with the ChartYAxisDeltaStart value, are used to find
# the lowest y-axis value delta so that the labels along the y-axis are no
# closer than the ChartMinYGridSpacingInPixels value.
# If not specified, the default value is 50.
#MF.std.ChartYAxisDeltaIncrement=50
#
#------------------------------------------------------------------------------
# This string is used as a template to build the title for the Chart Results
# page.  The first '%' in the string will be replaced with the starting date
# for the chart and the second '%' will be replaced by the ending date.
# If not specified, the default value is "Fund Performance (% &nbsp;-&nbsp; %)".
#MF.std.ChartResultsPageTitleTemplate=Fund Performance (% &nbsp;-&nbsp; %)
#
#------------------------------------------------------------------------------
# Specifies the format of the dates in the Chart Results page title.
# This value is used as a format string to the SimpleDataFormatter class.
# If not specified, the default value is "MMMMMMMMM d, yyyy".
#MF.std.ChartTitleDateFormat=MMMMMMMMM d, yyyy
#
#------------------------------------------------------------------------------
# Specifies the format of the date labels along the x-axis on the Chart Results
# page.  This value is used as a format string to the SimpleDataFormatter class.
# If not specified, the default value is "MMM-yy".
#MF.std.ChartXLabelDateFormat=MMM-yy
#
#
###############################################################################
#                                                                             #
# Properties required for our MQ Messaging Manager instance.                  #
#                                                                             #
###############################################################################
#
#------------------------------------------------------------------------------
# MQ Connection Type specifies whether we should use Client mode or Bindings
# mode, or not use MQ at all.
# Valid values are 'client', 'binding', 'auto', or 'none'.
# If 'auto' is specified, it will use Client mode on Windows and Bindings mode
# on AIX.
MF.std.MQConnType=none
#
#
###############################################################################
#                                                                             #
# Properties required for our MRL Logger System instance.                     #
#                                                                             #
###############################################################################
#
#------------------------------------------------------------------------------
# Determines where the logger output goes.  The capability is provided to send
# the output to the logger database tables or to the System.out console.
# Valid values are 'none', 'log', 'console' or 'both'.
# This property must be specified, there is no default.
MF.std.logFacility=Console
#
#------------------------------------------------------------------------------
# Specifies the maximum number of log items that can be buffered up locally
# before being flushed to the logger engine.  Once this maxCacheSize is reached
# or the following logCacheFlushPeriod has expired, the local buffer will be
# flushed.
# Valid values are integers greater than 0.  Values that are too small will
# cause a lot of logging overhead and slow down the application.  Values that
# are too large will result in some minor wasted memory usage.  It's better to
# err on the too large side than the too small side.  Note that the size
# requirement is determined by how many log items are being written in a given
# period of time, which increases greatly as the logMaxTraceLevel setting gets
# higher.  Hence, there is much more demand on the logger in the development
# and test stages than there is in production.
# This property must be specified, there is no default.
MF.std.logMaxCacheSize=100
#
#------------------------------------------------------------------------------
# Specifies the maximum amount of time (in milliseconds) that can elapse
# before the local log item cache will be flushed to the logger engine.
# Valid values are integers greater than 0.  Larger values will result in
# better performance but could result in more lost data if the application
# crashes or the machine goes down.
# This property must be specified, there is no default.
MF.std.logCacheFlushPeriod=7000
#
#------------------------------------------------------------------------------
# Specifies which logging requests will be ignored and which will actually be
# written to the log files.  Each logging request belongs to one of the levels
# shown below.  Only the levels which are less than or equal to this setting
# will actually be written out to the files.  The higher the setting, the more
# detailed logging occurs (and the bigger the log files become).
# Valid values are 0 through 7.  The meaning of these levels is as follows.
#       0 - critical error
#       1 - error
#       2 - warning
#       3 - major information
#       4 - information
#       5 - major method trace
#       6 - minor method trace
#       7 - internal method details
# Levels 5 thru 7 are only compiled into DEBUG builds so they aren't available
# in production builds.
# This property must be specified, there is no default.
MF.std.logMaxTraceLevel=2
#
#------------------------------------------------------------------------------
# This is the RMI URL of the logger component.
# This property must be specified, there is no default.
# Now that we are using OSE and running the servlets on the same machine as the
# BOS components, this should probably always be set to rmi://localhost/LoggerComponent
MF.std.loggerURL=rmi://localhost/LoggerComponent

# Minimum PBA increase
MF.account.min_pba_increase=5.00

# Minimum PBA increase if PBA total now is 0%
MF.account.min_zero_pba_increase=1.00

# 
MF.account.ny_stock_closure_time_limit=30
#
MF.account.ny_stock_closure_after_time_limit=15

#iLoans Listener Port for communication between TPA webServer and ezk AppServer
MF.iloans.listener_port_number=30011

#Property for running unit tests
TestURLPrefix=http://localhost

#This is used by the AutoEnrollment Periodic Process,
#make sure you use the date in format MMddyyyy. If you
#leave them empty the process defaults them to current date,
#and it will only do processing for today.
AE_START_DATE=
AE_END_DATE=

#This is used by the AutoContribution Periodic Process
#if needed to restart, just set the parameters in the URL
#example: http://servername/PeriodicProcessServlet?periodicProcessClassName=com.manulife.pension.ps.service.contract.misc.AutoContributionProcess&START_DATE=01012006&END_DATE=01012006
aci.process.maxValue= 10

#Setup of directory of where to write the Monitor_ACIPP.log file which containts the last successful run timestamp for
#the acipp.
acippLogDir=c:\\webSphere9\\AppServer\\profiles\\PlanSponsor\\logs


#------------------------------------------------------------------------------
#Sending email notification for payroll email
#------------------------------------------------------------------------------

email_payment_pending_notification_subject=Overdue payment - awaiting payment on Payroll Company submission
#------------------------------------------------------------------------------
#Auto Payroll Submission Processed. Payment overdue  --- TBD
#------------------------------------------------------------------------------
email_payment_pending_notification_message =Dear Client:\n\nDO NOT REPLY TO THIS EMAIL\n\n\n\nContract: ![contract_number]!\nSubmission Id: ![tracking_number]!\n\nPayment for your contribution submission has not been received. Please submit an online payment for these contributions so that they can be invested as soon as possible. If you have already made an online payment, please ignore this message.\n\nIf there is an error or if you have any concerns contact your client account representative at ![phone_number]! and have your contract number handy. 
#------------------------------------------------------------------------------
#Auto Payroll Submission Processed. Payment overdue  --- TBD
#------------------------------------------------------------------------------

payment_pending_email_expected_period_days_key=2
NyPhoneNumber = 1-800-574-5557 
UsPhoneNumber = 1-800-333-0963
NyWebsite = www.jhpensions.com/ny
UsWebsite = www.jhpensions.com/er
psw.sil.message = Payroll Path contribution was received more than *2 days ago, follow up with client on payment.

#------------------------------------------------------------------------------
#LARKSPUR site details
#------------------------------------------------------------------------------
larkspur_site_location=https://larkspurweb.com/planisphere/loginExternal.aspx
larkspur_user_us=manulifeus&ProductSelector=PSP&Agree=on
larkspur_user_ny=manulifeny&ProductSelector=PSP&Agree=on
larkspur_password=JHancock2020&

#------------------------------------------------------------------------------
#ERISA site details
#------------------------------------------------------------------------------
erisa_site_location=http://www.pensionplanet.com/refcheck/default.asp
erisa_user_ny=4Manulife_0New_1York_K
erisa_user_us=4Manulife_0USA_1_K


#------------------------------------------------------------------------------
#eConsent Implementation Details
#------------------------------------------------------------------------------
eConsent.Implementation.Date = 2013-12-07


#------------------------------------------------------------------------------
#Notice Manager Control Reports
#------------------------------------------------------------------------------
MF.noticeManager.reports.totalCareTpaAdminId = 63613


